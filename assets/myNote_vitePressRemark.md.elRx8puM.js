import{_ as a,c as t,o as e,a4 as s}from"./chunks/framework.CGkmJMTS.js";const m=JSON.parse('{"title":"Vite Press 备注","description":"","frontmatter":{},"headers":[],"relativePath":"myNote/vitePressRemark.md","filePath":"myNote/vitePressRemark.md"}'),i={name:"myNote/vitePressRemark.md"},n=s(`<h1 id="vite-press-备注" tabindex="-1">Vite Press 备注 <a class="header-anchor" href="#vite-press-备注" aria-label="Permalink to &quot;Vite Press 备注&quot;">​</a></h1><h3 id="因为也不是经常提交-每次提交可能会忘记步骤-所以记录一下" tabindex="-1">因为也不是经常提交，每次提交可能会忘记步骤，所以记录一下 <a class="header-anchor" href="#因为也不是经常提交-每次提交可能会忘记步骤-所以记录一下" aria-label="Permalink to &quot;因为也不是经常提交，每次提交可能会忘记步骤，所以记录一下&quot;">​</a></h3><h3 id="tips" tabindex="-1">Tips： <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips：&quot;">​</a></h3><ol><li><p>如未配置公钥请先前往 GitHub 配置 SSH 公钥</p></li><li><p>开关梯子都交不了的情况下改一下 git 配置</p></li></ol><p>地址是梯子地址和端口</p><div class="language-git vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global https.proxy https://127.0.0.1:7897</span></span>
<span class="line"><span>git config --global http.proxy http://127.0.0.1:7897</span></span></code></pre></div><p>交完记得还原配置</p><div class="language-git vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">git</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global --unset https.proxy</span></span>
<span class="line"><span>git config -–global --unset http.proxy</span></span></code></pre></div><ol start="3"><li>文档仓库有两个分支，master 是源代码分支，pages 是源码生成的静态页面的分支</li></ol><h3 id="_1-先把文档源码-git-提交到-master-分支" tabindex="-1">1. 先把文档源码 Git 提交到 master 分支 <a class="header-anchor" href="#_1-先把文档源码-git-提交到-master-分支" aria-label="Permalink to &quot;1. 先把文档源码 Git 提交到 master 分支&quot;">​</a></h3><h3 id="_2-然后更新页面-git-bash-里运行-npm-run-publish" tabindex="-1">2. 然后更新页面 Git Bash 里运行 npm run publish <a class="header-anchor" href="#_2-然后更新页面-git-bash-里运行-npm-run-publish" aria-label="Permalink to &quot;2. 然后更新页面 Git Bash 里运行 npm run publish&quot;">​</a></h3><p>这个是写好的一个命令，打包完发布到 page 分支并删除打包后的文件</p>`,12),p=[n];function o(r,l,h,c,d,g){return e(),t("div",null,p)}const b=a(i,[["render",o]]);export{m as __pageData,b as default};
