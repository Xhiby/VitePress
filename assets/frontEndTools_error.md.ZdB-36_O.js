import{_ as e,c as a,o as r,a4 as t}from"./chunks/framework.CGkmJMTS.js";const u=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"frontEndTools/error.md","filePath":"frontEndTools/error.md"}'),o={name:"frontEndTools/error.md"},n=t('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p>这里记录所有遇见过的前端报错及解决方法</p><h2 id="大部分错误" tabindex="-1">大部分错误 <a class="header-anchor" href="#大部分错误" aria-label="Permalink to &quot;大部分错误&quot;">​</a></h2><ol><li>检查镜像地址是否为 <a href="https://registry.npmmirror.com/" target="_blank" rel="noreferrer">https://registry.npmmirror.com/</a></li><li>尝试切换 node 版本</li></ol><h2 id="npm-下载-electron-卡住" tabindex="-1">npm 下载 electron 卡住 <a class="header-anchor" href="#npm-下载-electron-卡住" aria-label="Permalink to &quot;npm 下载 electron 卡住&quot;">​</a></h2><p>一般在 npm i 这一步，或者之后的打包步骤会出现 npm 下载失败的问题，原因是 electron 里有几个依赖包是通过 github 下载，因为网络的原因所以无法下载</p><p>解决方法：新建.npmrc 文件修改镜像</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ELECTRON_MIRROR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://npmmirror.com/mirrors/electron/&quot;</span></span></code></pre></div><h2 id="node-gyp-模块下载报错" tabindex="-1">node-gyp 模块下载报错 <a class="header-anchor" href="#node-gyp-模块下载报错" aria-label="Permalink to &quot;node-gyp 模块下载报错&quot;">​</a></h2><p>node-gyp 是一个工具，可以把 C++写的东西弄到 Node 上，然后这个东西它依赖 Python 和 C++环境</p>',10),s=[n];function i(l,p,d,c,h,m){return r(),a("div",null,s)}const g=e(o,[["render",i]]);export{u as __pageData,g as default};
